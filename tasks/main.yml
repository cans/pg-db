---
- name: Ensure admin DB user exists
  postgresql_user:
    name: "{{ pg_db_admin_user }}"
    db: "postgres"
    password: "{{ pg_db_admin_password | default(omit) }}"
    login_host: "{{ pg_db_host | default(omit) }}"
    login_password: "{% if pg_db_system_user is not defined %}{{ pg_db_admin_password | default(omit) }}{% else %}{{omit}}{% endif %}"
    login_unix_socket: "{{ pg_db_socket | default(omit) }}"
    login_user: "{{ pg_db_admin_user }}"
    port: "{{ pg_db_port | default(omit) }}"
    role_attr_flags: SUPERUSER,CREATEDB
    state: present
  become: "{% if pg_db_system_user is defined %}true{% else %}{{omit}}{% endif %}"
  become_user: "{{ pg_db_system_user | default(omit) }}"

- name: Ensure regular DB users exist
  postgresql_user:
    name: "{{ item.login }}"
    db: "postgres"
    password: "{{ item.password }}"
    login_host: "{{ item.host | default(pg_db_host | default(omit)) }}"
    login_password: "{{ pg_db_admin_password | default(omit) }}"
    login_unix_socket: "{{ item.socket | default(pg_db_socket) | default(omit) }}"
    login_user: "{{ pg_db_admin_user }}"
    port: "{{ pg_db_port | default(pg_db_port) | default(omit) }}"
    role_attr_flags: "{{ item.attr | default(pg_db_role_attr) }}"
    state: present
  become: "{% if pg_db_system_user is defined %}true{% else %}{{omit}}{% endif %}"
  become_user: "{{ pg_db_system_user | default(omit) }}"
  with_items: "{{ pg_db_user_add }}"

- name: Ensure databases to create exist
  postgresql_db:
    name: "{{ item.name }}"
    encoding: "{{ item.encoding | default(pg_db_encoding) }}"
    owner: "{{ item.owner }}"
    template: "{{ item.template|default('template0') }}"
    login_host: "{{ item.host | default(pg_db_host) | default(omit) }}"
    login_password: "{{pg_db_admin_password}}"
    login_user: "{{ pg_db_admin_user }}"
    port: "{{ pg_db_port | default(pg_db_port) | default(omit) }}"
    state: present
  become: "{% if pg_db_system_user is defined %}true{% else %}{{omit}}{% endif %}"
  become_user: "{{ pg_db_system_user | default(omit) }}"
  with_items: "{{pg_db_database_add}}"

- name: Check local DB has required extensions installed
  postgresql_ext:
    name: "{{item[1] }}"
    db: "{{ item[0].name }}"
    login_host: "{{ item.host | default(pg_db_host) | default(omit) }}"
    login_password: "{{pg_db_admin_password}}"
    login_user: "{{ pg_db_admin_user }}"
    port: "{{ pg_db_port | default(pg_db_port) | default(omit) }}"
    state: "present"
  become: "{% if pg_db_system_user is defined %}true{% else %}{{omit}}{% endif %}"
  become_user: "{{ pg_db_system_user | default(omit) }}"
  with_subelements:
    - "{{pg_db_database_add}}"
    - extensions

- name: Ensure databases to delete no longer exist
  postgresql_db:
    name: "{{ item.name }}"
    encoding: "{{ item.encoding | default(pg_db_encoding) }}"
    owner: "{{ item.owner }}"
    template: "{{ item.template|default('template0') }}"
    login_host: "{{ item.host | default(pg_db_host) | default(omit) }}"
    login_password: "{{pg_db_admin_password}}"
    login_user: "{{ pg_db_admin_user }}"
    port: "{{ pg_db_port | default(pg_db_port) | default(omit) }}"
    state: absent
  become: "{% if pg_db_system_user is defined %}true{% else %}{{omit}}{% endif %}"
  become_user: "{{ pg_db_system_user | default(omit) }}"
  with_items: "{{ pg_db_database_del }}"

- name: Ensure regular DB users to delete no longer exist
  postgresql_user:
    name: "{{ item.login }}"
    db: "postgres"
    password: "{{ item.password }}"
    login_host: "{{ item.host | default(pg_db_host | default(omit)) }}"
    login_password: "{{ pg_db_admin_password | default(omit) }}"
    login_unix_socket: "{{ item.socket | default(pg_db_socket) | default(omit) }}"
    login_user: "{{ pg_db_admin_user }}"
    port: "{{ pg_db_port | default(pg_db_port) | default(omit) }}"
    role_attr_flags: "{{ item.attr | default(pg_db_role_attr) }}"
    state: absent
  become: "{% if pg_db_system_user is defined %}true{% else %}{{omit}}{% endif %}"
  become_user: "{{ pg_db_system_user | default(omit) }}"
  with_items: "{{ pg_db_user_del }}"

# - name: Extensions post-installation queries
#   command: psql "postgresql://{{pg_admin_user}}:{{kpler_adm_db_password}}@{{kpler_db_host_name}}:{{pg_db_port}}/{{kpler_db_name}}" -c '{{item}}'
#   with_items: "{{pg_extensions_post_install_queries}}"
